{"version":3,"file":"static/js/501.a23a420b.chunk.js","mappings":"2RAUMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJE,MAAM,iDACNC,WACHC,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,2CACPF,aAGQG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,GACPE,SAAU,IAEZQ,iBAAkBb,EAClBc,SAXmB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BT,GAASU,EAAAA,EAAAA,IAAMH,IACfE,GACF,IAWA,OACEE,EAAAA,EAAAA,MAAA,QAAML,SAAUJ,EAAOU,aAAcC,aAAa,MAAKC,SAAA,EACrDC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,WAAS,EACTC,GAAI,CAAEC,GAAI,GACVC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOrB,EAAOK,OAAOZ,MACrB6B,SAAUtB,EAAOuB,aACjBC,OAAQxB,EAAOyB,WACfC,MAAO1B,EAAO2B,QAAQlC,OAASmC,QAAQ5B,EAAO6B,OAAOpC,OACrDqC,WAAY9B,EAAO2B,QAAQlC,OAASO,EAAO6B,OAAOpC,MAClDsC,WAAY,CACVC,gBACEnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAc,CAACC,SAAS,QAAOtB,UAC9BC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,UAKlBtB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,WAAS,EACTC,GAAI,CAAEC,GAAI,GACVC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNgB,KAAK,WACLf,MAAOrB,EAAOK,OAAOV,SACrB2B,SAAUtB,EAAOuB,aACjBC,OAAQxB,EAAOyB,WACfC,MAAO1B,EAAO2B,QAAQhC,UAAYiC,QAAQ5B,EAAO6B,OAAOlC,UACxDmC,WAAY9B,EAAO2B,QAAQhC,UAAYK,EAAO6B,OAAOlC,SACrDoC,WAAY,CACVC,gBACEnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAc,CAACC,SAAS,QAAOtB,UAC9BC,EAAAA,EAAAA,KAACwB,EAAAA,EAAY,UAKrBxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACC,MAAM,UAAUC,QAAQ,YAAYzB,WAAS,EAACqB,KAAK,SAAQxB,SAAC,aAK1E,E,oBC3DA,EArBkB,WAChB,OACEH,EAAAA,EAAAA,MAACgC,EAAAA,EAAG,CACFzB,GAAI,CACF0B,UAAW,EACXC,MAAO,IACPC,GAAI,GACJC,EAAG,EACHC,aAAc,EACdC,GAAI,OACJC,UAAW,UACXpC,SAAA,EAEFC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAAArC,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAETC,EAAAA,EAAAA,KAAChB,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport EmailIcon from '@mui/icons-material/Email';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport PasswordIcon from '@mui/icons-material/Password';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Enter valid email. For example user@gmail.com')\n    .required(),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters.')\n    .required(),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} autoComplete='off'>\n      <TextField\n        fullWidth\n        sx={{ mb: 2 }}\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <EmailIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        fullWidth\n        sx={{ mb: 2 }}\n        id=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <PasswordIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n        Log In\n      </Button>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet';\nimport Box from '@mui/material/Box';\n\nconst LoginPage = () => {\n  return (\n    <Box\n      sx={{\n        boxShadow: 1,\n        width: 400,\n        mt: 15,\n        p: 2,\n        borderRadius: 1,\n        mx: 'auto',\n        textAlign: 'center',\n      }}\n    >\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </Box>\n  );\n};\n\nexport default LoginPage;\n"],"names":["schema","yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","logIn","_jsxs","handleSubmit","autoComplete","children","_jsx","TextField","fullWidth","sx","mb","id","name","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","InputProps","startAdornment","InputAdornment","position","EmailIcon","type","PasswordIcon","Button","color","variant","Box","boxShadow","width","mt","p","borderRadius","mx","textAlign","Helmet"],"sourceRoot":""}