{"version":3,"file":"static/js/751.2eff690a.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","../node_modules/@mui/icons-material/Person.js"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport EmailIcon from '@mui/icons-material/Email';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport PersonIcon from '@mui/icons-material/Person';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  email: yup\n    .string()\n    .email('Enter valid email. For example user@gmail.com')\n    .required(),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters.')\n    .required(),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} autoComplete='off'>\n      <TextField\n        fullWidth\n        sx={{ mb: 2 }}\n        id=\"name\"\n        name=\"name\"\n        label=\"name\"\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <PersonIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        fullWidth\n        sx={{ mb: 2 }}\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <EmailIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        fullWidth\n        sx={{ mb: 2 }}\n        id=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <PasswordIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n        Register\n      </Button>\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\nimport Box from '@mui/material/Box';\n\nconst RegisterPage = () => {\n  return (\n    <Box\n      sx={{\n        boxShadow: 1,\n        width: '100%',\n        maxWidth: 400,\n        height: 'auto',\n        p: 2,\n        borderRadius: 1,\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        textAlign: 'center',\n      }}\n    >\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <RegisterForm />\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;"],"names":["schema","yup","shape","name","matches","required","email","password","min","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","register","_jsxs","handleSubmit","autoComplete","children","_jsx","TextField","fullWidth","sx","mb","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","InputProps","startAdornment","InputAdornment","position","PersonIcon","EmailIcon","type","PasswordIcon","Button","color","variant","Box","boxShadow","width","maxWidth","height","p","borderRadius","top","left","transform","textAlign","Helmet","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}